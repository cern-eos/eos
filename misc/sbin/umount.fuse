#!/bin/bash
# ----------------------------------------------------------------------
# File: umount.fuse
# Author: Andreas-Joachim Peters - CERN
# ----------------------------------------------------------------------

# ************************************************************************
# * EOS - the CERN Disk Storage System                                   *
# * Copyright (C) 2022 CERN/Switzerland                                  *
# *                                                                      *
# * This program is free software: you can redistribute it and/or modify *
# * it under the terms of the GNU General Public License as published by *
# * the Free Software Foundation, either version 3 of the License, or    *
# * (at your option) any later version.                                  *
# *                                                                      *
# * This program is distributed in the hope that it will be useful,      *
# * but WITHOUT ANY WARRANTY; without even the implied warranty of       *
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *
# * GNU General Public License for more details.                         *
# *                                                                      *
# * You should have received a copy of the GNU General Public License    *
# * along with this program.  If not, see <http://www.gnu.org/licenses/>.*
# ************************************************************************

case $1 in
  -h|--help|-?)
      echo "mount.eoscfsx is a private umount(8) wrapper for eoscfsd/EOS."
      echo "Don't use it directly!"
      exit 1
      ;;
esac

if [ -z "$1" ]; then
    echo "error: please provide the name of your FUSE mount !"
    exit -1;
fi

shift

options=()
eoo=0 

# filter out '-n ' which is passwd by automount if /etc/mtab is a symlink into /proc
while [[ $1 ]]
do
    if ! ((eoo)); then
	case "$1" in
	    -n)
		shift
		;;
	    *)
		options+=("$1")
		shift
		;;
	esac
    else
	options+=("$1")
	
	# Another (worse) way of doing the same thing:
	# options=("${options[@]}" "$1")
	shift
    fi
done

echo ${options[@]}

pkill -f "eoscfsd $1"
