#!/bin/bash

# ******************************************************************************
# EOS - the CERN Disk Storage System
# Copyright (C) 2021 CERN/Switzerland
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ******************************************************************************

#------------------------------------------------------------------------------
# Description: @todo(astoeve)
#
#
# Usage:
# eos-dynamic-test
#------------------------------------------------------------------------------

# Regular Colors
Color_Off='\033[0m'       # Text Reset
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
function green() { echo -e "${Green} $* ${Color_Off}"; }
function red() { echo -e "${Red} $* ${Color_Off}"; }

# For occasional wait-time
function pause() {
  local secs=$1
  while [ $secs -gt 0 ]; do
     echo -ne "$secs\033[0K\r"
     sleep 1
     : $((secs--))
  done
}


eos mkdir -p /eos/testarea/test2
eos chmod 777 /eos/testarea/test2

#This is used for setting the systems different parameters in the directory
eos attr set sys.forced.blocksize=1M /eos/testarea/test2
eos attr set sys.forced.layout=raid6 /eos/testarea/test2
eos attr set sys.forced.nstripes=6 /eos/testarea/test2
eos attr set sys.forced.nexcess=2 /eos/testarea/test2

# Create dummy test files
fallocate -l 5000000 /tmp/5mbfile.dat                                                                                                                                                                   
TEST_FN1=/tmp/5mbfile.dat
TEST_FN2=/tmp/1mbfile.dat


for name in {1..10}
do eos cp ${TEST_FN1} /eos/testarea/test2/filetest$name; done

pause 10

#This is in order to set the different settings to true in order to use it in the system for testing
minthreshold=`eos space config default space.dynamicec.minthreshold=show`
maxthreshold=`eos space config default space.dynamicec.maxthreshold=show`
sizeformapmax=`eos space config default space.dynamicec.sizeformapmax=show`
sleepwhenfull=`eos space config default space.dynamicec.sleepwhenfull=show`
sleepwhendone=`eos space config default space.dynamicec.sleepwhendone=show`
fileage=`eos space config default space.dynamicec.agefromwhentodelete=show`

echo "val of the thres"
echo "Minimum threshold: " $minthreshold
echo "Maximum threshold: " $maxthreshold
echo "Maximum size for map: " $sizeformapmax
echo "Sleep when full: " $sleepwhenfull
echo "Sleep when done: " $sleepwhendone
echo "Age for files" $fileage


eos space config default space.dynamicec.minthreshold=0.0000001
eos space config default space.dynamicec.maxthreshold=0.000001
eos space config default space.dynamicec.sizeformapmax=100000000000000
eos space config default space.dynamicec.sleepwhenfull=120
eos space config default space.dynamicec.sleepwhendone=120
eos space config default space.dynamicec.agefromwhentodelete=0
eos space config default space.dynamicec.test=on
eos space config default space.dynamicec.restartscan=on

echo "done configuration"

pause 390

val=$(eos file info /eos/testarea/test2/filetest1 | grep Layout | awk '{print $10}')
echo $val

if [ $val != "d3+2::t0" ]; then
  red "This has a failure for the system wich did fail."

  eos rm -r /eos/testarea/test2/

  eos space config default space.dynamicec.maxthreshold=$maxthreshold
  eos space config default space.dynamicec.minthreshold=$minthreshold
  eos space config default space.dynamicec.test=off
  eos space config default space.dynamicec.sizeformapmax=$sizeformapmax
  eos space config default space.dynamicec.sleepwhenfull=$sleepwhenfull
  eos space config default space.dynamicec.sleepwhendone=$sleepwhendone
  eos space config default space.dynamicec.agefromwhentodelete=$fileage

#  rm -i /tmp/5mbfile.dat # @todo(astoeve) interactive (-i) or force (-f)?
  rm -f /tmp/5mbfile.dat  # force atm, TBC

  exit 1
fi

green "Succes for the test part 1, now we will try again."

for name in {11..20}
do eos cp ${TEST_FN1} /eos/testarea/test2/filetest$name; done


pause 390

val=`eos file info /eos/testarea/test2/filetest11 | grep Layout | awk '{print $10}'`
echo $val

if [ $val != "d3+2::t0" ];
then
red "This has a faliure for the system wich did fail to clean up for the second wave of files and are not reliable."

eos rm /eos/testarea/test2/*
eos rmdir /eos/testarea/test2

eos space config default space.dynamicec.maxthreshold=$maxthreshold
eos space config default space.dynamicec.minthreshold=$minthreshold
eos space config default space.dynamicec.test=off
eos space config default space.dynamicec.sizeformapmax=$sizeformapmax
eos space config default space.dynamicec.sleepwhenfull=$sleepwhenfull
eos space config default space.dynamicec.sleepwhendone=$sleepwhendone
eos space config default space.dynamicec.agefromwhentodelete=fileage

rm -i /tmp/5mbfile.dat

exit 1
fi

green "both test had succes"

eos rm /eos/testarea/test2/*
eos rmdir /eos/testarea/test2

eos space config default space.dynamicec.maxthreshold=$maxthreshold
eos space config default space.dynamicec.minthreshold=$minthreshold
eos space config default space.dynamicec.test=off
eos space config default space.dynamicec.sizeformapmax=$sizeformapmax
eos space config default space.dynamicec.sleepwhenfull=$sleepwhenfull
eos space config default space.dynamicec.sleepwhendone=$sleepwhendone
eos space config default space.dynamicec.agefromwhentodelete=fileage

rm -f /tmp/5mbfile.dat

exit 0
