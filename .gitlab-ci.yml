workflow:
    rules:
        - if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/ # X.Y.Z

variables:
    IMAGE_BASE_NAME: "${CI_REGISTRY}/${CI_PROJECT_PATH}"
    IMAGE_NAME_TAGGED: "${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}"

stages:          # List of stages for jobs, and their order of execution
    - build
    - test
    - tag

#######################################
## Build stage
#######################################

build_image:
    stage: build
    trigger:
        include:
        -   project: 'ci-tools/docker-builder'
            file: '/ci.yml'
        strategy: depend
    variables:
        TO: "$IMAGE_NAME_TAGGED"
        CONTEXT_DIR: "./"
        CACHE_TTL: 360h0m0s # two weeks

#######################################
## Test stage
#######################################

.test_image:
    stage: test
    image:
        name: "$IMAGE_NAME_TAGGED"
        entrypoint: ["/usr/bin/env"]
    script:
        - uname -a
        #- cd /app/
        #- ctest -j 4 -C Release -VV

test_x86_64:
    extends: .test_image
    needs:
        - build_image

test_aarch64:
    extends: .test_image
    needs:
        - build_image
    tags:
        - docker-aarch64

#######################################
## Tag stage (after successful tests)
#######################################

tag_latest:
    stage: tag
    needs:
        - test_x86_64
        - test_aarch64
    image: gitlab-registry.cern.ch/ci-tools/docker-builder/tools
    variables:
        # No need to clone the repo
        GIT_STRATEGY: none
    # We don't need artifacts from previous steps
    dependencies: []
    script:
        # always update latest tag to this release
        - crane tag "$IMAGE_NAME_TAGGED" "latest"
        - crane validate --remote "${IMAGE_BASE_NAME}:latest"
        # update semantic tags according to version
        - _MAJOR_VER=$(echo "$CI_COMMIT_TAG" | cut -d'.' -f1)
        - _MINOR_VER=$(echo "$CI_COMMIT_TAG" | cut -d'.' -f2)
        # tag :X
        - crane tag "$IMAGE_NAME_TAGGED" "$_MAJOR_VER"
        - crane validate --remote "${IMAGE_BASE_NAME}:${_MAJOR_VER}"
        # tag :X.Y
        - crane tag "$IMAGE_NAME_TAGGED" "${_MAJOR_VER}.${_MINOR_VER}"
        - crane validate --remote "${IMAGE_BASE_NAME}:${_MAJOR_VER}.${_MINOR_VER}"
    #only:
        #- eos5
