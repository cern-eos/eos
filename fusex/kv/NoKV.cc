//------------------------------------------------------------------------------
//! @file NoKv.cc
//! @author Andreas-Joachim Peters CERN
//! @brief NokV persistency class
//------------------------------------------------------------------------------

/************************************************************************
 * EOS - the CERN Disk Storage System                                   *
 * Copyright (C) 2020 CERN/Switzerland                                  *
 *                                                                      *
 * This program is free software: you can redistribute it and/or modify *
 * it under the terms of the GNU General Public License as published by *
 * the Free Software Foundation, either version 3 of the License, or    *
 * (at your option) any later version.                                  *
 *                                                                      *
 * This program is distributed in the hope that it will be useful,      *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of       *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *
 * GNU General Public License for more details.                         *
 *                                                                      *
 * You should have received a copy of the GNU General Public License    *
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.*
 ************************************************************************/

#include "kv/kv.hh"
#include "eosfuse.hh"
#include "misc/MacOSXHelper.hh"
#include "common/Logging.hh"
#include <errno.h>

/* -------------------------------------------------------------------------- */
NoKV::NoKV()
/* -------------------------------------------------------------------------- */
{
}

/* -------------------------------------------------------------------------- */
NoKV::~NoKV()
/* -------------------------------------------------------------------------- */
{
}

/* -------------------------------------------------------------------------- */
int
/* -------------------------------------------------------------------------- */
NoKV::connect(const std::string& prefix, const std::string& connectionstring,
              int port)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

/* -------------------------------------------------------------------------- */
int
/* -------------------------------------------------------------------------- */
NoKV::get(const std::string& key, std::string& value)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

/* -------------------------------------------------------------------------- */
int
/* -------------------------------------------------------------------------- */
NoKV::inc(const std::string& key, uint64_t& value)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

/* -------------------------------------------------------------------------- */
int
/* -------------------------------------------------------------------------- */
NoKV::put(const std::string& key, const std::string& value)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

/* -------------------------------------------------------------------------- */
int
/* -------------------------------------------------------------------------- */
NoKV::erase(const std::string& key)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

/* -------------------------------------------------------------------------- */
int
/* -------------------------------------------------------------------------- */
NoKV::get(uint64_t key, std::string& value, const std::string& name_space)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

/* -------------------------------------------------------------------------- */
int
/* -------------------------------------------------------------------------- */
NoKV::get(uint64_t key, uint64_t& value, const std::string& name_space)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

/* -------------------------------------------------------------------------- */
int
/* -------------------------------------------------------------------------- */
NoKV::get(const std::string& key, uint64_t& value)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

/* -------------------------------------------------------------------------- */
int
/* -------------------------------------------------------------------------- */
NoKV::put(const std::string& key, uint64_t value)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

int
/* -------------------------------------------------------------------------- */
NoKV::put(uint64_t key, const std::string& value,
          const std::string& name_space)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

int
/* -------------------------------------------------------------------------- */
NoKV::put(uint64_t key, uint64_t value, const std::string& name_space)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}

int
/* -------------------------------------------------------------------------- */
NoKV::erase(uint64_t key, const std::string& name_space)
/* -------------------------------------------------------------------------- */
{
  return EOPNOTSUPP;
}
